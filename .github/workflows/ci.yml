name: Full CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check compilation
      run: |
        node --check server.js
        echo "✅ Backend compilation successful"
        
    - name: Run ESLint
      run: npm run lint
      
    - name: Check Prettier formatting
      run: npm run format

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check compilation (Metro bundler)
      run: |
        npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output /tmp/bundle.js --assets-dest /tmp/assets
        echo "✅ Frontend compilation successful"
        
    - name: Run ESLint
      run: npm run lint
      
    - name: Check Prettier formatting
      run: npm run format
      
    - name: Run tests
      run: npm test

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install backend dependencies
      run: npm ci
      working-directory: ./backend
      
    - name: Start backend server
      run: |
        npm start &
        echo $! > server.pid
        sleep 5
        
    - name: Test backend health endpoint
      run: |
        curl -f http://localhost:3000/api/health || exit 1
        echo "✅ Backend integration test passed"
        
    - name: Cleanup
      if: always()
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi
